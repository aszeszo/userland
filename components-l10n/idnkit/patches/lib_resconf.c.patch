*** idnkit-1.0-src/lib/resconf.c.org	Wed Aug 27 11:37:02 2003
--- idnkit-1.0-src/lib/resconf.c	Wed Sep  3 13:08:14 2003
***************
*** 60,65 ****
--- 60,70 ----
  #include <pwd.h>
  #endif
  
+ #ifdef	SUN_CHANGE
+ #include <sys/types.h>
+ #include <sys/stat.h>
+ #endif	/* SUN_CHANGE */
+ 
  #include <idn/result.h>
  #include <idn/assert.h>
  #include <idn/logmacro.h>
***************
*** 176,181 ****
--- 181,191 ----
  	idn_result_t r;
  
  	assert(ctxp != NULL);
+ #ifdef	SUN_CHANGE
+ 	if (ctxp == NULL) {
+ 		return (idn_nomemory);
+ 	}
+ #endif	/* SUN_CHANGE */
  
  	TRACE(("idn_resconf_create()\n"));
  
***************
*** 246,251 ****
--- 256,267 ----
  
  static idn_result_t
  open_userdefaultfile(FILE **fpp) {
+ #ifdef	SUN_CHANGE
+ 	/*
+ 	 * We don't allow user default file; see LSARC/2003/311.
+ 	 */
+ 	return (idn_nofile);
+ #else
  #ifdef WIN32
  	char user_path[MAX_PATH_SIZE];
  
***************
*** 293,298 ****
--- 309,315 ----
  
  	return (idn_success);
  #endif /* WIN32 */
+ #endif	/* SUN_CHANGE */
  }
  
  static idn_result_t
***************
*** 299,304 ****
--- 316,324 ----
  open_defaultfile(FILE **fpp) {
  	idn_result_t r;
  	const char *file;
+ #ifdef	SUN_CHANGE
+ 	struct stat64 sbuf;
+ #endif	/* SUN_CHANGE */
  
  	r = open_userdefaultfile(fpp);
  	if (r == idn_nofile || r == idn_notfound) {
***************
*** 305,310 ****
--- 325,346 ----
  		TRACE(("open_defaultfile: "
  		       "cannot open user configuration file\n"));
  		file = idn_resconf_defaultfile();
+ #ifdef	SUN_CHANGE
+ 		if (stat64(file, &sbuf) == -1) {
+ 			return (idn_nofile);
+ 		}
+ 		/*
+ 		 * We make sure that the access mode is 0444, owner is root,
+ 		 * and group is sys for better security; see LSARC/2003/311.
+ 		 */
+ 		if (sbuf.st_mode != 0100444 || sbuf.st_uid != 0 ||
+ 		    sbuf.st_gid != 3) {
+ 			fprintf(stderr, "idn_nameinit: warning: config file "
+ 				"(%s) not in proper access mode or ownership "
+ 				"- the file ignored.\n", file);
+ 			return (idn_nofile);
+ 		}
+ #endif	/* SUN_CHANGE */
  		*fpp = fopen(file, "r");
  #ifdef ENABLE_MDNKIT_COMPAT
  		if (*fpp == NULL)
***************
*** 328,333 ****
--- 364,374 ----
  	idn_result_t r;
  
  	assert(ctx != NULL);
+ #ifdef	SUN_CHANGE
+ 	if (ctx == NULL) {
+ 		return (idn_nofile);
+ 	}
+ #endif	/* SUN_CHANGE */
  
  	TRACE(("idn_resconf_loadfile(file=%s)\n",
  	      file == NULL ? "<null>" : file));
***************
*** 367,372 ****
--- 408,417 ----
  void
  idn_resconf_destroy(idn_resconf_t ctx) {
  	assert(ctx != NULL);
+ #ifdef	SUN_CHANGE
+ 	if (ctx == NULL)
+ 		return;
+ #endif	/* SUN_CHANGE */
  
  	TRACE(("idn_resconf_destroy()\n"));
  
***************
*** 385,390 ****
--- 430,439 ----
  void
  idn_resconf_incrref(idn_resconf_t ctx) {
  	assert(ctx != NULL);
+ #ifdef	SUN_CHANGE
+ 	if (ctx == NULL)
+ 		return;
+ #endif	/* SUN_CHANGE */
  
  	TRACE(("idn_resconf_incrref()\n"));
  	TRACE(("idn_resconf_incrref: update reference count (%d->%d)\n",
***************
*** 396,401 ****
--- 445,454 ----
  idn_converter_t
  idn_resconf_getalternateconverter(idn_resconf_t ctx) {
  	assert(ctx != NULL);
+ #ifdef	SUN_CHANGE
+ 	if (ctx == NULL)
+ 		return ((idn_converter_t)NULL);
+ #endif	/* SUN_CHANGE */
  
  	TRACE(("idn_resconf_getalternateconverter()\n"));
  
***************
*** 405,410 ****
--- 458,467 ----
  idn_delimitermap_t
  idn_resconf_getdelimitermap(idn_resconf_t ctx) {
  	assert(ctx != NULL);
+ #ifdef	SUN_CHANGE
+ 	if (ctx == NULL)
+ 		return ((idn_delimitermap_t)NULL);
+ #endif	/* SUN_CHANGE */
  
  	TRACE(("idn_resconf_getdelimitermap()\n"));
  
***************
*** 416,421 ****
--- 473,482 ----
  idn_converter_t
  idn_resconf_getidnconverter(idn_resconf_t ctx) {
  	assert(ctx != NULL);
+ #ifdef	SUN_CHANGE
+ 	if (ctx == NULL)
+ 		return ((idn_converter_t)NULL);
+ #endif	/* SUN_CHANGE */
  
  	TRACE(("idn_resconf_getidnconverter()\n"));
  
***************
*** 427,432 ****
--- 488,497 ----
  idn_converter_t
  idn_resconf_getauxidnconverter(idn_resconf_t ctx) {
  	assert(ctx != NULL);
+ #ifdef	SUN_CHANGE
+ 	if (ctx == NULL)
+ 		return ((idn_converter_t)NULL);
+ #endif	/* SUN_CHANGE */
  
  	TRACE(("idn_resconf_getauxidnconverter()\n"));
  
***************
*** 438,443 ****
--- 503,512 ----
  idn_converter_t
  idn_resconf_getlocalconverter(idn_resconf_t ctx) {
  	assert(ctx != NULL);
+ #ifdef	SUN_CHANGE
+ 	if (ctx == NULL)
+ 		return ((idn_converter_t)NULL);
+ #endif	/* SUN_CHANGE */
  
  	TRACE(("idn_resconf_getlocalconverter()\n"));
  
***************
*** 457,462 ****
--- 526,535 ----
  idn_mapselector_t
  idn_resconf_getlocalmapselector(idn_resconf_t ctx) {
  	assert(ctx != NULL);
+ #ifdef	SUN_CHANGE
+ 	if (ctx == NULL)
+ 		return ((idn_mapselector_t)NULL);
+ #endif	/* SUN_CHANGE */
  
  	TRACE(("idn_resconf_getlocalmapselector()\n"));
  
***************
*** 468,473 ****
--- 541,550 ----
  idn_mapper_t
  idn_resconf_getmapper(idn_resconf_t ctx) {
  	assert(ctx != NULL);
+ #ifdef	SUN_CHANGE
+ 	if (ctx == NULL)
+ 		return ((idn_mapper_t)NULL);
+ #endif	/* SUN_CHANGE */
  
  	TRACE(("idn_resconf_getmapper()\n"));
  
***************
*** 479,484 ****
--- 556,565 ----
  idn_normalizer_t
  idn_resconf_getnormalizer(idn_resconf_t ctx) {
  	assert(ctx != NULL);
+ #ifdef	SUN_CHANGE
+ 	if (ctx == NULL)
+ 		return ((idn_normalizer_t)NULL);
+ #endif	/* SUN_CHANGE */
  
  	TRACE(("idn_resconf_getnormalizer()\n"));
  
***************
*** 490,495 ****
--- 571,580 ----
  idn_checker_t
  idn_resconf_getprohibitchecker(idn_resconf_t ctx) {
  	assert(ctx != NULL);
+ #ifdef	SUN_CHANGE
+ 	if (ctx == NULL)
+ 		return ((idn_checker_t)NULL);
+ #endif	/* SUN_CHANGE */
  
  	TRACE(("idn_resconf_getprohibitchecker()\n"));
  
***************
*** 501,506 ****
--- 586,595 ----
  idn_checker_t
  idn_resconf_getunassignedchecker(idn_resconf_t ctx) {
  	assert(ctx != NULL);
+ #ifdef	SUN_CHANGE
+ 	if (ctx == NULL)
+ 		return ((idn_checker_t)NULL);
+ #endif	/* SUN_CHANGE */
  
  	TRACE(("idn_resconf_getunassignedchecker()\n"));
  
***************
*** 512,517 ****
--- 601,610 ----
  idn_checker_t
  idn_resconf_getbidichecker(idn_resconf_t ctx) {
  	assert(ctx != NULL);
+ #ifdef	SUN_CHANGE
+ 	if (ctx == NULL)
+ 		return ((idn_checker_t)NULL);
+ #endif	/* SUN_CHANGE */
  
  	TRACE(("idn_resconf_getbidichecker()\n"));
  
***************
*** 524,529 ****
--- 617,626 ----
  idn_resconf_setalternateconverter(idn_resconf_t ctx,
  				  idn_converter_t alternate_converter) {
  	assert(ctx != NULL);
+ #ifdef	SUN_CHANGE
+ 	if (ctx == NULL)
+ 		return;
+ #endif	/* SUN_CHANGE */
  
  	TRACE(("idn_resconf_setalternateconverter()\n"));
  }
***************
*** 532,537 ****
--- 629,638 ----
  idn_resconf_setdelimitermap(idn_resconf_t ctx,
  			    idn_delimitermap_t delimiter_mapper) {
  	assert(ctx != NULL);
+ #ifdef	SUN_CHANGE
+ 	if (ctx == NULL)
+ 		return;
+ #endif	/* SUN_CHANGE */
  
  	TRACE(("idn_resconf_setdelimitermap()\n"));
  
***************
*** 546,551 ****
--- 647,656 ----
  idn_resconf_setidnconverter(idn_resconf_t ctx, 
  			    idn_converter_t idn_converter) {
  	assert(ctx != NULL);
+ #ifdef	SUN_CHANGE
+ 	if (ctx == NULL)
+ 		return;
+ #endif	/* SUN_CHANGE */
  
  	TRACE(("idn_resconf_setidnconverter()\n"));
  
***************
*** 560,565 ****
--- 665,674 ----
  idn_resconf_setauxidnconverter(idn_resconf_t ctx,
  				idn_converter_t aux_idn_converter) {
  	assert(ctx != NULL);
+ #ifdef	SUN_CHANGE
+ 	if (ctx == NULL)
+ 		return;
+ #endif	/* SUN_CHANGE */
  
  	TRACE(("idn_resconf_setauxidnconverter()\n"));
  
***************
*** 575,580 ****
--- 684,693 ----
  			      idn_converter_t local_converter) {
  #ifndef WITHOUT_ICONV
  	assert(ctx != NULL);
+ #ifdef	SUN_CHANGE
+ 	if (ctx == NULL)
+ 		return;
+ #endif	/* SUN_CHANGE */
  
  	TRACE(("idn_resconf_setlocalconverter()\n"));
  
***************
*** 597,602 ****
--- 710,719 ----
  idn_resconf_setlocalmapselector(idn_resconf_t ctx,
  				idn_mapselector_t local_mapper) {
  	assert(ctx != NULL);
+ #ifdef	SUN_CHANGE
+ 	if (ctx == NULL)
+ 		return;
+ #endif	/* SUN_CHANGE */
  
  	TRACE(("idn_resconf_setlocalmapselector()\n"));
  
***************
*** 610,615 ****
--- 727,736 ----
  void
  idn_resconf_setmapper(idn_resconf_t ctx, idn_mapper_t mapper) {
  	assert(ctx != NULL);
+ #ifdef	SUN_CHANGE
+ 	if (ctx == NULL)
+ 		return;
+ #endif	/* SUN_CHANGE */
  
  	TRACE(("idn_resconf_setmapper()\n"));
  
***************
*** 623,628 ****
--- 744,753 ----
  void
  idn_resconf_setnormalizer(idn_resconf_t ctx, idn_normalizer_t normalizer) {
  	assert(ctx != NULL);
+ #ifdef	SUN_CHANGE
+ 	if (ctx == NULL)
+ 		return;
+ #endif	/* SUN_CHANGE */
  
  	TRACE(("idn_resconf_setnormalizer()\n"));
  
***************
*** 637,642 ****
--- 762,771 ----
  idn_resconf_setprohibitchecker(idn_resconf_t ctx,
  			       idn_checker_t prohibit_checker) {
  	assert(ctx != NULL);
+ #ifdef	SUN_CHANGE
+ 	if (ctx == NULL)
+ 		return;
+ #endif	/* SUN_CHANGE */
  
  	TRACE(("idn_resconf_setprohibitchecker()\n"));
  
***************
*** 651,656 ****
--- 780,789 ----
  idn_resconf_setunassignedchecker(idn_resconf_t ctx,
  				 idn_checker_t unassigned_checker) {
  	assert(ctx != NULL);
+ #ifdef	SUN_CHANGE
+ 	if (ctx == NULL)
+ 		return;
+ #endif	/* SUN_CHANGE */
  
  	TRACE(("idn_resconf_setunassignedchecker()\n"));
  
***************
*** 665,670 ****
--- 798,807 ----
  idn_resconf_setbidichecker(idn_resconf_t ctx,
  			   idn_checker_t bidi_checker) {
  	assert(ctx != NULL);
+ #ifdef	SUN_CHANGE
+ 	if (ctx == NULL)
+ 		return;
+ #endif	/* SUN_CHANGE */
  
  	TRACE(("idn_resconf_setbidichecker()\n"));
  
***************
*** 689,694 ****
--- 826,835 ----
  	idn_result_t r;
  
  	assert(ctx != NULL && version != NULL);
+ #ifdef	SUN_CHANGE
+ 	if (ctx == NULL || version == NULL)
+ 		return (idn_invalid_name);
+ #endif	/* SUN_CHANGE */
  
  	TRACE(("idn_resconf_setnameprepversion()\n"));
  
***************
*** 793,798 ****
--- 934,943 ----
  idn_resconf_setalternateconvertername(idn_resconf_t ctx, const char *name,
  				      int flags) {
  	assert(ctx != NULL && name != NULL);
+ #ifdef	SUN_CHANGE
+ 	if (ctx == NULL || name == NULL)
+ 		return (idn_invalid_name);
+ #endif	/* SUN_CHANGE */
  
  	TRACE(("idn_resconf_setalternateconvertername(name=%s, flags=%d)\n",
  	      name, flags));
***************
*** 807,812 ****
--- 952,961 ----
  	idn_result_t r;
  
  	assert(ctx != NULL && name != NULL);
+ #ifdef	SUN_CHANGE
+ 	if (ctx == NULL || name == NULL)
+ 		return (idn_invalid_name);
+ #endif	/* SUN_CHANGE */
  
  	TRACE(("idn_resconf_setidnconvertername(name=%s, flags=%d)\n",
  	      name, flags));
***************
*** 830,835 ****
--- 979,988 ----
  	idn_result_t r;
  
  	assert(ctx != NULL && name != NULL);
+ #ifdef	SUN_CHANGE
+ 	if (ctx == NULL || name == NULL)
+ 		return (idn_invalid_name);
+ #endif	/* SUN_CHANGE */
  
  	TRACE(("idn_resconf_setauxidnconvertername(name=%s, flags=%d)\n",
  	      name, flags));
***************
*** 862,867 ****
--- 1015,1024 ----
  	idn_result_t r;
  
  	assert(ctx != NULL);
+ #ifdef	SUN_CHANGE
+ 	if (ctx == NULL)
+ 		return (idn_invalid_name);
+ #endif	/* SUN_CHANGE */
  
  	TRACE(("idn_resconf_setlocalconvertername(name=%s, flags=%d)\n",
  	      name == NULL ? "<null>" : name, flags));
***************
*** 908,913 ****
--- 1065,1074 ----
  	idn_result_t r;
  
  	assert(ctx != NULL && names != NULL && tld != NULL);
+ #ifdef	SUN_CHANGE
+ 	if (ctx == NULL || names == NULL || tld == NULL)
+ 		return (idn_nomemory);
+ #endif	/* SUN_CHANGE */
  
  	TRACE(("idn_resconf_addalllocalmapselectorname(tld=%s, nnames=%d)\n",
  	      tld, nnames));
***************
*** 928,933 ****
--- 1089,1098 ----
  	idn_result_t r;
  
  	assert(ctx != NULL && names != NULL);
+ #ifdef	SUN_CHANGE
+ 	if (ctx == NULL || names == NULL)
+ 		return (idn_invalid_name);
+ #endif	/* SUN_CHANGE */
  
  	TRACE(("idn_resconf_addallmappername()\n"));
  
***************
*** 947,952 ****
--- 1112,1121 ----
  	idn_result_t r;
  
  	assert(ctx != NULL && names != NULL);
+ #ifdef	SUN_CHANGE
+ 	if (ctx == NULL || names == NULL)
+ 		return (idn_invalid_name);
+ #endif	/* SUN_CHANGE */
  
  	TRACE(("idn_resconf_addallnormalizername(nnames=%d)\n", nnames));
  
***************
*** 968,973 ****
--- 1137,1146 ----
  	int i;
  
  	assert(ctx != NULL && names != NULL);
+ #ifdef	SUN_CHANGE
+ 	if (ctx == NULL || names == NULL)
+ 		return (idn_invalid_name);
+ #endif	/* SUN_CHANGE */
  
  	TRACE(("idn_resconf_addallprohibitcheckername(nnames=%d)\n", nnames));
  
***************
*** 1001,1006 ****
--- 1174,1183 ----
  	int i;
  
  	assert(ctx != NULL && names != NULL);
+ #ifdef	SUN_CHANGE
+ 	if (ctx == NULL || names == NULL)
+ 		return (idn_invalid_name);
+ #endif	/* SUN_CHANGE */
  
  	TRACE(("idn_resconf_addallunassignedcheckername(nnames=%d)\n",
  	      nnames));
***************
*** 1035,1040 ****
--- 1212,1221 ----
  	int i;
  
  	assert(ctx != NULL && names != NULL);
+ #ifdef	SUN_CHANGE
+ 	if (ctx == NULL || names == NULL)
+ 		return (idn_invalid_name);
+ #endif	/* SUN_CHANGE */
  
  	TRACE(("idn_resconf_addallbidicheckername(nnames=%d)\n", nnames));
  
***************
*** 1432,1437 ****
--- 1613,1622 ----
  	idn_result_t r;
  
  	assert(ctx != NULL);
+ #ifdef	SUN_CHANGE
+ 	if (ctx == NULL)
+ 		return (idn_invalid_name);
+ #endif	/* SUN_CHANGE */
  
  	TRACE(("idn_resconf_setdefaults()\n"));
  
***************
*** 1452,1457 ****
--- 1637,1646 ----
  
  	TRACE(("setdefaults_body()\n"));
  	assert(ctx != NULL);
+ #ifdef	SUN_CHANGE
+ 	if (ctx == NULL)
+ 		return (idn_invalid_name);
+ #endif	/* SUN_CHANGE */
  
  	if (!(conf_mask & DEFAULT_CONF_NAMEPREP)) {
  		TRACE(("set default nameprep\n"));
